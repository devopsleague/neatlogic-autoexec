<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.module.autoexec.dao.mapper.AutoexecProfileMapper">

    <insert id="insertAutoexecProfileOperation">
        INSERT INTO autoexec_profile_operation ( profile_id, operation_id ,type,lcd)
        VALUES
        <foreach collection="operationIdList" item="operationId" separator=",">
            (#{profileId},#{operationId},#{type},#{lcd})
        </foreach>
        ON DUPLICATE KEY UPDATE
        lcd = #{lcd}
    </insert>

    <insert id="insertProfile" parameterType="codedriver.framework.autoexec.dto.profile.AutoexecProfileVo">
        INSERT INTO autoexec_profile
        (id,
         name,
         description,
         system_id,
         fcd,
         fcu,
         lcd,
         lcu)
        VALUES (#{id},
                #{name},
                #{description},
                #{fromSystemId},
                NOW(3),
                #{fcu},
                NOW(3),
                #{fcu}) ON DUPLICATE KEY
        UPDATE `name` = #{name},
            `description` = #{description},
            `system_id` = #{fromSystemId},
            `lcu` = #{lcu},
            `lcd` = now(3)
    </insert>

    <insert id="insertAutoexecProfileParamList">
        INSERT INTO autoexec_profile_param ( `id`, `key`,`type`, `value_invoke_type`, `profile_id`, `default_value`, `operation_id`,
        `operation_type`, `lcd` )
        VALUES
        <foreach collection="paramList" item="param" separator=",">
            (#{param.id},
            #{param.key},
            #{param.type},
            #{param.valueInvokeType},
            #{profileId},
            #{param.defaultValueStr},
            #{param.operationId},
            #{param.operationType},
            #{lcd})
        </foreach>
        ON DUPLICATE KEY
        UPDATE `type` =VALUES(type),
        `lcd`=#{lcd},
        `value_invoke_type` =VALUES(value_invoke_type),
        `default_value` =VALUES(default_value),
        `operation_id` =VALUES(operation_id),
        `operation_type` =VALUES(operation_type)
    </insert>

    <insert id="insertProfileParamValueInvokeList">
        INSERT INTO autoexec_profile_param_value_invoke
        (`id`,`profile_param_id`,`value_invoke_id`,`value_invoke_type`)
        VALUES
        <foreach collection="paramValueInvokeVoList" item="vo" separator=",">
            (#{vo.id},
            #{vo.profileParamId},
            #{vo.invokeId},
            #{vo.invokeType})
        </foreach>
        ON DUPLICATE KEY
        UPDATE `value_invoke_id` =VALUES(value_invoke_id)
    </insert>

    <select id="searchAutoexecProfileCount" parameterType="codedriver.framework.autoexec.dto.profile.AutoexecProfileVo"
            resultType="int">
        SELECT
        COUNT(distinct a.id)
        <include refid="searchProfile"></include>
    </select>

    <sql id="searchProfile">
        <include refid="searchProfileFrom"></include>
        <if test="operationId != null">
            LEFT JOIN autoexec_profile_operation apo ON apo.profile_id = a.id
        </if>
        <include refid="searchProfileWhere"></include>
    </sql>

    <sql id="searchProfileWhere">
        <where>
            <if test="keyword != null and keyword != ''">
                AND (a.`name` LIKE CONCAT('%',#{keyword}, '%') OR a.`description` LIKE CONCAT('%',#{keyword}, '%'))
            </if>
            <if test="operationId != null">
                and apo.`operation_id` = #{operationId}
            </if>
            <if test="ciEntityId != null">
                and dpc.`ci_entity_id` = #{ciEntityId}
            </if>
            <choose>
                <when test="fromSystemId == -1">
                    and a.system_id = -1
                </when>
                <when test="fromSystemId != null">
                    and cc.`id` = #{fromSystemId}
                </when>
            </choose>
            <if test="defaultValue != null and defaultValue.size() > 0">
                AND a.`id` IN
                <foreach collection="defaultValue" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </sql>

    <sql id="searchProfileFrom">
        FROM
        `autoexec_profile` a
        <choose>
            <when test="fromSystemId == -1">
            </when>
            <otherwise>
                LEFT JOIN cmdb_cientity cc ON cc.id = a.system_id
            </otherwise>
        </choose>
        LEFT JOIN autoexec_profile_cientity dpc ON dpc.profile_id=a.id
        LEFT JOIN cmdb_cientity cct ON cct.id = dpc.ci_entity_id
    </sql>

    <select id="checkProfileIsExists" resultType="int">
        SELECT count(1)
        FROM `autoexec_profile`
        WHERE `id` = #{value}
    </select>

    <resultMap id="profileMap" type="codedriver.framework.autoexec.dto.profile.AutoexecProfileVo">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="fromSystemId" property="fromSystemId"/>
        <result column="fromSystemName" property="fromSystemName"/>
        <result column="fcu" property="fcu"/>
        <result column="fcd" property="fcd"/>
        <result column="lcu" property="lcu"/>
        <result column="lcd" property="lcd"/>
        <collection property="ciEntityList" ofType="codedriver.framework.cmdb.dto.cientity.CiEntityVo">
            <id column="ciEntityId" property="id"/>
            <result column="ciEntityName" property="name"/>
            <result column="ciIcon" property="ciIcon"/>
        </collection>
        <collection property="autoexecOperationVoList"
                    ofType="codedriver.framework.autoexec.dto.AutoexecOperationVo">
            <id column="profileOperationId" property="id"/>
            <result column="profileOperationType" property="type"/>
        </collection>
        <collection property="profileParamVoList"
                    ofType="codedriver.framework.autoexec.dto.profile.AutoexecProfileParamVo">
            <id column="paramId" property="id"/>
            <result column="key" property="key"/>
            <result column="type" property="type"/>
            <result column="paramOperationId" property="operationId"/>
            <result column="paramOperationType" property="operationType"/>
            <result column="valueInvokeType" property="valueInvokeType"/>
            <result column="defaultValue" property="defaultValue"/>
            <collection property="valueInvokeVoList"
                        ofType="codedriver.framework.autoexec.dto.profile.AutoexecProfileParamValueVo">
                <id column="paramValueId" property="id"/>
                <result column="paramId" property="profileParamId"/>
                <result column="invokeId" property="invokeId"/>
                <result column="invokeValue" property="invokeValue"/>
            </collection>

        </collection>
    </resultMap>

    <select id="getProfileVoById" resultMap="profileMap">
        SELECT a.id,
        a.name,
        a.description,
        a.system_id AS fromSystemId,
        <if test="fromSystemId != null and fromSystemId != -1 ">
            cc.name as fromSystemName,
        </if>
        cct.id AS ciEntityId,
        cct.name as ciEntityName,
        dpo.type AS profileOperationType,
        dpo.operation_id as profileOperationId,
        a.fcd,
        a.fcu,
        a.lcd,
        a.lcu
        <include refid="searchProfileFrom"></include>
        left join autoexec_profile_operation dpo on dpo.profile_id = a.id
        WHERE a.id = #{value}
    </select>

    <select id="checkProfileNameIsRepeats" resultType="int">
        SELECT count(1)
        FROM autoexec_profile
        WHERE id != #{id}
          AND name =#{name}
    </select>

    <resultMap id="autoexecOperationMap" type="codedriver.framework.autoexec.dto.AutoexecOperationVo">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="type" property="type"/>
        <result column="execMode" property="execMode"/>
        <result column="typeId" property="typeId"/>
        <result column="typeName" property="typeName"/>
        <result column="description" property="description"/>
        <result column="configStr" property="configStr"/>
        <association property="riskVo" javaType="codedriver.framework.autoexec.dto.AutoexecRiskVo">
            <result column="riskId" property="id"/>
            <result column="riskName" property="name"/>
            <result column="riskColor" property="color"/>
        </association>
    </resultMap>

    <select id="getAutoexecOperationVoByProfileId" resultMap="autoexecOperationMap">
        (SELECT a.`id`,
                a.`name`,
                'script'      AS `type`,
                a.`exec_mode` AS execMode,
                a.`type_id`   AS typeId,
                ate.`name`    AS typeName,
                a.`risk_id`   AS riskId,
                ar.`name`     AS riskName,
                ar.`color`    AS riskColor,
                a.`description`
         FROM `autoexec_script` a
                  JOIN `autoexec_script_version` b ON a.`id` = b.`script_id`
                  LEFT JOIN autoexec_type ate ON a.`type_id` = ate.`id`
                  LEFT JOIN autoexec_risk ar ON a.`risk_id` = ar.`id`
         WHERE b.`is_active` = 1
           and a.`id` in
               (select operation_id
                from autoexec_profile_operation
                where profile_id = #{value}))
        union
        (
            select a.`id`,
                   a.`name`,
                   'tool'        as `type`,
                   a.`exec_mode` as execMode,
                   a.`type_id`   as typeId,
                   ate.`name`    as typeName,
                   a.`risk_id`   as riskId,
                   ar.`name`     as riskName,
                   ar.`color`    as riskColor,
                   a.`description`
            from `autoexec_tool` a
                     LEFT JOIN autoexec_type ate ON a.`type_id` = ate.`id`
                     LEFT JOIN autoexec_risk ar ON a.`risk_id` = ar.`id`
            where a.`is_active` = 1
              and a.`id` in
                  (select operation_id
                   from autoexec_profile_operation
                   where profile_id = #{value}))
    </select>

    <select id="searchAutoexecProfile"
            resultType="codedriver.framework.autoexec.dto.profile.AutoexecProfileVo">
        SELECT a.id,
        a.name,
        a.description,
        a.system_id AS fromSystemId,
        <choose>
            <when test="fromSystemId == -1">
            </when>
            <otherwise>
                cc.name as fromSystemName,
            </otherwise>
        </choose>
        cct.id AS ciEntityId,
        cct.name as ciEntityName,
        cci.icon as ciIcon,
        a.fcd,
        a.fcu,
        a.lcd,
        a.lcu
        <include refid="searchProfileFrom"></include>
        LEFT JOIN cmdb_ci cci ON cci.id = cct.ci_id
        <include refid="searchProfileWhere"></include>
        ORDER BY a.lcd DESC
        LIMIT #{startNum}, #{pageSize}
    </select>

    <resultMap id="profileParamMap" type="codedriver.framework.autoexec.dto.profile.AutoexecProfileParamVo">
        <id column="id" property="id"/>
        <result column="key" property="key"/>
        <result column="type" property="type"/>
        <result column="operationId" property="operationId"/>
        <result column="operationType" property="operationType"/>
        <result column="valueInvokeType" property="valueInvokeType"/>
        <result column="defaultValue" property="defaultValue"/>
        <collection property="valueInvokeVoList"
                    ofType="codedriver.framework.autoexec.dto.profile.AutoexecProfileParamValueVo">
            <result column="paramValueId" property="id"/>
            <result column="paramId" property="profileParamId"/>
            <result column="invokeId" property="invokeId"/>
            <result column="invokeKey" property="invokeKey"/>
            <result column="invokeName" property="invokeName"/>
            <result column="invokeValue" property="invokeValue"/>
            <result column="invokeType" property="invokeType"/>
        </collection>
    </resultMap>

    <select id="getProfileParamListByProfileId" resultMap="profileParamMap">
        SELECT
            app.id,
            app.key,
            app.type,
            app.default_value AS defaultValue,
            app.operation_id AS operationId,
            app.operation_type AS operationType,
            app.value_invoke_type AS valueInvokeType,
            appvi.id AS paramValueId,
            appvi.profile_param_id AS paramId,
            appvi.value_invoke_id AS invokeId,
            agp.key AS invokeKey,
            agp.name AS invokeName,
            agp.default_value AS invokeValue,
            agp.type AS invokeType
        FROM
            autoexec_profile_param app
                LEFT JOIN autoexec_profile_param_value_invoke appvi ON appvi.profile_param_id = app.id
                LEFT JOIN autoexec_global_param agp ON agp.id = appvi.value_invoke_id
        WHERE app.profile_id = #{value}
    </select>

    <select id="getNeedDeleteProfileParamIdListByProfileIdAndLcd" resultType="java.lang.Long">
        SELECT id
        FROM autoexec_profile_param
        WHERE profile_id = #{profileId}
          AND lcd != #{lcd}
    </select>

    <select id="getProfileInfoListByIdList" resultMap="profileMap">
        SELECT ap.id,
        ap.name,
        ap.description,
        ap.system_id AS fromSystemId,
        dpo.type AS profileOperationType,
        dpo.operation_id as profileOperationId,
        app.id AS paramId,
        app.key,
        app.type,
        app.default_value AS defaultValue,
        app.operation_id AS paramOperationId,
        app.operation_type AS paramOperationType,
        app.value_invoke_type AS valueInvokeType,
        appvi.id AS paramValueId,
        appvi.value_invoke_id AS invokeId,
        agp.default_value AS invokeValue
        FROM autoexec_profile ap
        left join autoexec_profile_operation dpo on dpo.profile_id = ap.id
        LEFT JOIN autoexec_profile_param app ON ap.id = app.profile_id
        LEFT JOIN autoexec_profile_param_value_invoke appvi ON appvi.profile_param_id = app.id
        LEFT JOIN autoexec_global_param agp ON agp.id = appvi.value_invoke_id
        WHERE ap.id IN
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <delete id="deleteProfileById">
        DELETE
        FROM autoexec_profile
        WHERE id = #{value}
    </delete>

    <delete id="deleteProfileOperationByProfileId">
        DELETE
        FROM autoexec_profile_operation
        WHERE profile_id = #{value}
    </delete>

    <delete id="deleteProfileOperationByOperationId">
        DELETE
        FROM autoexec_profile_operation
        WHERE operation_id = #{value}
    </delete>

    <delete id="deleteProfileParamValueInvokeByProfileId">
        DELETE
        FROM autoexec_profile_param_value_invoke
        WHERE profile_param_id IN (
            SELECT app.id
            FROM autoexec_profile_param app
                     JOIN autoexec_profile ap ON ap.id = app.profile_id
            WHERE ap.id = #{value})
    </delete>

    <delete id="deleteProfileParamByProfileId">
        DELETE
        FROM autoexec_profile_param
        WHERE profile_id = #{value}
    </delete>

    <delete id="deleteProfileParamByIdList">
        DELETE
        FROM autoexec_profile_param
        WHERE id IN
        <foreach collection="idList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteProfileParamValueInvokeByParamIdList">
        DELETE
        FROM autoexec_profile_param_value_invoke
        WHERE profile_param_id IN
        <foreach collection="idList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteProfileOperationByProfileIdAndLcd">
        DELETE
        FROM autoexec_profile_operation
        WHERE profile_id = #{profileId}
          AND lcd != #{lcd}
    </delete>

</mapper>
